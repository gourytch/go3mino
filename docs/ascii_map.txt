All triominos:
[0,0,0], [0,0,1], [0,0,2], [0,0,3], [0,0,4], [0,0,5],
[0,1,1], [0,1,2], [0,1,3], [0,1,4], [0,1,5],
[0,2,2], [0,2,3], [0,2,4], [0,2,5],
[0,3,3], [0,3,4], [0,3,5],
[0,4,4], [0,4,5],
[0,5,5],
[1,1,1], [1,1,2], [1,1,3], [1,1,4], [1,1,5],
[1,2,2], [1,2,3], [1,2,4], [1,2,5],
[1,3,3], [1,3,4], [1,3,5],
[1,4,4], [1,4,5],
[1,5,5],
[2,2,2], [2,2,3], [2,2,4], [2,2,5],
[2,3,3], [2,3,4], [2,3,5],
[2,4,4], [2,4,5],
[2,5,5],
[3,3,3], [3,3,4], [3,3,5],
[3,4,4], [3,4,5],
[3,5,5],
[4,4,4], [4,4,5],
[4,5,5],
[5,5,5]

Nodes:
_______  ^ 
\0   1/ /0\
 \   / /   \
  \2/ /2   1\
   v  ~~~~~~~

Variants / Rotations:
_______      ^      _______      ^      _______      ^
\0   1/     /0\     \2   0/     /2\     \1   2/     /1\
 \ 0 /     / 1 \     \ 2 /     / 3 \     \ 4 /     / 5 \
  \2/     /2   1\     \1/     /1   0\     \0/     /0   2\
   v      ~~~~~~~      v      ~~~~~~~      v      ~~~~~~~
   0: 012v
   1: 012^
   2: 201v
   3: 201^
   4: 120v
   5: 120^

Game Field Positions
    +-----------------------------------------------------> Col
    |  ______ ^ _______ ^ _______ ^ _______ ^ _______
    | \ 0;0 // \\ 0;2 // \\ 0;4 // \\ 0;6 // \\ 0;8 /
    |  \   //   \\   //   \\   //   \\   //   \\   /
    |   \ // 0;1 \\ // 0;3 \\ // 0;5 \\ // 0;7 \\ /
    |    v ~~~~~~~ v ~~~~~~~ v ~~~~~~~ v ~~~~~~~ v
    |    ^ _______ ^ _______ ^ _______ ^ _______ ^
    |   / \\ 1;1 // \\ 1;3 // \\ 1;5 // \\ 1;7 // \
    |  /   \\   //   \\   //   \\   //   \\   //   \
    | / 1;0 \\ // 1;2 \\ // 1;4 \\ // 1;6 \\ // 1;8 \
    | ~~~~~~~ v ~~~~~~~ v ~~~~~~~ v ~~~~~~~ v ~~~~~~~
    |  ______ ^ _______ ^ _______ ^ _______ ^ _______
    | \ 2;0 // \\ 2;2 // \\ 2;4 // \\ 2;6 // \\ 2;8 /
    |  \   //   \\   //   \\   //   \\   //   \\   /
    |   \ // 2;1 \\ // 2;3 \\ // 2;5 \\ // 2;7 \\ /
    |    v ~~~~~~~ v ~~~~~~~ v ~~~~~~~ v ~~~~~~~ v
    |    ^ _______ ^ _______ ^ _______ ^ _______ ^
    |   / \\ 3;1 // \\ 3;3 // \\ 3;5 // \\ 3;7 // \
    |  /   \\   //   \\   //   \\   //   \\   //   \
    | / 3;0 \\ // 3;2 \\ // 3;4 \\ // 3;6 \\ // 3;8 \
    | ~~~~~~~ v ~~~~~~~ v ~~~~~~~ v ~~~~~~~ v ~~~~~~~
    v
   Row

   v 0;0   0;2   0;4   0;6   0;8
   ^    0;1   0;3   0;5   0;7
   v    1;1   1;3   1;5   1;7
   ^ 1;0   1;2   1;4   1;6   1;8
   v 2;0   2;2   2;4   2;6   2;8
   ^    2;1   2;3   2;5   2;7
   v    3;1   3;3   3;5   3;7
   ^ 3;0   3;2   3;4   3;6   3;8

   .;;;;;;;;;.;;;;;;;;;.;;;;;;;;;.;;;;;;;;;.;;;;;;;;;.
   ..;;;;;;;...;;;;;;;...;;;;;;;...;;;;;;;...;;;;;;;;.
   ...;;;;;.....;;;;;.....;;;;;.....;;;;;.....;;;;;...
   ....;;;.......;;;.......;;;.......;;;.......;;;....
   .....;.........;.........;.........;.........;.....
   ,,,,,:,,,,,,,,,:,,,,,,,,,:,,,,,,,,,:,,,,,,,,,:,,,,,
   ,,,,:::,,,,,,,:::,,,,,,,:::,,,,,,,:::,,,,,,,:::,,,,
   ,,,:::::,,,,,:::::,,,,,:::::,,,,,:::::,,,,,:::::,,,
   ,,:::::::,,,:::::::,,,:::::::,,,:::::::,,,:::::::,,
   ,:::::::::,:::::::::,:::::::::,:::::::::,:::::::::,
   .;;;;;;;;;.;;;;;;;;;.;;;;;;;;;.;;;;;;;;;.;;;;;;;;;.
   ..;;;;;;;...;;;;;;;...;;;;;;;...;;;;;;;...;;;;;;;;.
   ...;;;;;.....;;;;;.....;;;;;.....;;;;;.....;;;;;...
   ....;;;.......;;;.......;;;.......;;;.......;;;....
   .....;.........;.........;.........;.........;.....
   ,,,,,:,,,,,,,,,:,,,,,,,,,:,,,,,,,,,:,,,,,,,,,:,,,,,
   ,,,,:::,,,,,,,:::,,,,,,,:::,,,,,,,:::,,,,,,,:::,,,,
   ,,,:::::,,,,,:::::,,,,,:::::,,,,,:::::,,,,,:::::,,,
   ,,:::::::,,,:::::::,,,:::::::,,,:::::::,,,:::::::,,
   ,:::::::::,:::::::::,:::::::::,:::::::::,:::::::::,

Linked Positions:
  for (+0;+0): [(+0;-1), (+0;+1), (+1;+0)]
  for (+0;+1): [(-1;+1), (+0;+2), (+0;+0)]

Simple structure for Cell:
Value[3]
  if (-1,-1,-1): Cell is free
  if (0..5,0..5,0..5): Cell is occupied


Edges/Sides/Links:

    E0
  _______          ^
  \0   1/         /0\
E2 \   / E1   E2 /   \ E0
    \2/         /2   1\
     v          ~~~~~~~
                   E1

E0 = ([0],[1]); E0' = ([1],[0])
E1 = ([1],[2]); E1' = ([2],[1])
E2 = ([2],[0]); E2' = ([0],[2])


check for consistency:
  E1
  adjanced edje is free or with the same values in reverse order

checks

              ^
             / \
            /   \
           /-1;+0\
           ~~~~~~~ 
         ^ _______ ^
        / \\+0;+0// \
       /   \\   //   \
      /+0;-1\\ //+0;+1\
      ~~~~~~~ v ~~~~~~~
v-shape: even(row) == even(col):
  E0 vs Cell[-1;+0]E1'
  E1 vs Cell[+0;+1]E2'
  E2 vs Cell[+0;-1]E0'

       ______ ^ _______
      \+0;-1// \\+0;+1/
       \   //   \\   /
        \ //+0;+0\\ /
         v ~~~~~~~ v
           _______ 
           \+0;+1/
            \   /
             \ /
              v
^-shape: even(row) != even(col):
  E0 vs Cell[+0;+1]E2'
  E1 vs Cell[+1;+0]E0'
  E2 vs Cell[+0;-1]E1'
